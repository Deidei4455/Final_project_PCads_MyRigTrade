from pcportal.models import *

cpu_db = [
    Cpu.objects.create(brand="AMD", cpu_model="Ryzen 5 3600",
                       cores=6, base_clock_speed=3.6, socket_type="AM4"),
    Cpu.objects.create(brand="AMD", cpu_model="Ryzen 7 3700X",
                       cores=8, base_clock_speed=3.6, socket_type="AM4"),
    Cpu.objects.create(brand="AMD", cpu_model="Ryzen 9 3900X",
                       cores=12, base_clock_speed=3.8, socket_type="AM4"),
    Cpu.objects.create(brand="AMD", cpu_model="Ryzen 5 1600",
                       cores=6, base_clock_speed=3.2, socket_type="AM4"),
    Cpu.objects.create(brand="AMD", cpu_model="Ryzen 7 2700X",
                       cores=8, base_clock_speed=3.7, socket_type="AM4"),
    Cpu.objects.create(brand="AMD", cpu_model="FX-8350", cores=8,
                       base_clock_speed=4.0, socket_type="AM3+"),
    Cpu.objects.create(brand="AMD", cpu_model="Athlon X4 860K",
                       cores=4, base_clock_speed=3.7, socket_type="FM2+"),
    Cpu.objects.create(brand="AMD", cpu_model="Ryzen 5 5600X",
                       cores=6, base_clock_speed=3.7, socket_type="AM4"),
    Cpu.objects.create(brand="AMD", cpu_model="Ryzen 7 5800X",
                       cores=8, base_clock_speed=3.8, socket_type="AM4"),
    Cpu.objects.create(brand="AMD", cpu_model="Ryzen 9 7950X",
                       cores=16, base_clock_speed=4.5, socket_type="AM5"),
    Cpu.objects.create(brand="AMD", cpu_model="Ryzen 7 7800X3D",
                       cores=8, base_clock_speed=4.2, socket_type="AM5"),
    Cpu.objects.create(brand="AMD", cpu_model="Ryzen 9 7900X3D",
                       cores=12, base_clock_speed=4.4, socket_type="AM5"),
    Cpu.objects.create(brand="AMD", cpu_model="Ryzen 9 7950X3D",
                       cores=16, base_clock_speed=4.2, socket_type="AM5"),

    Cpu.objects.create(brand="Intel", cpu_model="Core i5-10600K",
                       cores=6, base_clock_speed=4.1, socket_type="LGA1200"),
    Cpu.objects.create(brand="Intel", cpu_model="Core i7-10700K",
                       cores=8, base_clock_speed=3.8, socket_type="LGA1200"),
    Cpu.objects.create(brand="Intel", cpu_model="Core i9-10900K",
                       cores=10, base_clock_speed=3.7, socket_type="LGA1200"),
    Cpu.objects.create(brand="Intel", cpu_model="Core i5-2500K",
                       cores=4, base_clock_speed=3.3, socket_type="LGA1155"),
    Cpu.objects.create(brand="Intel", cpu_model="Core i7-3770K",
                       cores=4, base_clock_speed=3.5, socket_type="LGA1155"),
    Cpu.objects.create(brand="Intel", cpu_model="Core i7-4790K",
                       cores=4, base_clock_speed=4.0, socket_type="LGA1150"),
    Cpu.objects.create(brand="Intel", cpu_model="Core i7-6700K",
                       cores=4, base_clock_speed=4.0, socket_type="LGA1151"),
    Cpu.objects.create(brand="Intel", cpu_model="Core i7-7700K",
                       cores=4, base_clock_speed=4.2, socket_type="LGA1151"),
    Cpu.objects.create(brand="Intel", cpu_model="Core i9-9900K",
                       cores=8, base_clock_speed=3.6, socket_type="LGA1151"),
    Cpu.objects.create(brand="Intel", cpu_model="Core i9-13900K",
                       cores=24, base_clock_speed=3.0, socket_type="LGA1700"),
    Cpu.objects.create(brand="Intel", cpu_model="Pentium 4 3.0GHz",
                       cores=1, base_clock_speed=3.0, socket_type="LGA775"),
    Cpu.objects.create(brand="Intel", cpu_model="Core 2 Duo E8400",
                       cores=2, base_clock_speed=3.0, socket_type="LGA775"),
    Cpu.objects.create(brand="Intel", cpu_model="Core 2 Quad Q6600",
                       cores=4, base_clock_speed=2.4, socket_type="LGA775"),
]

gpu_db = [
    Gpu.objects.create(brand="NVIDIA", gpu_model="RTX 5090", vram=32, clock_speed=2410),
    Gpu.objects.create(brand="NVIDIA", gpu_model="RTX 4070 Ti Super", vram=16, clock_speed=2340),
    Gpu.objects.create(brand="NVIDIA", gpu_model="RTX 4090", vram=24, clock_speed=2235),
    Gpu.objects.create(brand="NVIDIA", gpu_model="RTX 4080 Super", vram=16, clock_speed=2295),
    Gpu.objects.create(brand="NVIDIA", gpu_model="RTX 4060", vram=8, clock_speed=1830),
    Gpu.objects.create(brand="NVIDIA", gpu_model="RTX 3080", vram=10, clock_speed=1440),
    Gpu.objects.create(brand="NVIDIA", gpu_model="RTX 3070", vram=8, clock_speed=1500),
    Gpu.objects.create(brand="NVIDIA", gpu_model="RTX 3060 Ti", vram=8, clock_speed=1410),
    Gpu.objects.create(brand="NVIDIA", gpu_model="GTX 1660 Super", vram=6, clock_speed=1530),
    Gpu.objects.create(brand="NVIDIA", gpu_model="GTX 1080 Ti", vram=11, clock_speed=1480),
    Gpu.objects.create(brand="NVIDIA", gpu_model="GTX 1070", vram=8, clock_speed=1506),
    Gpu.objects.create(brand="NVIDIA", gpu_model="GTX 980", vram=4, clock_speed=1126),
    Gpu.objects.create(brand="NVIDIA", gpu_model="GTX 970", vram=4, clock_speed=1050),
    Gpu.objects.create(brand="NVIDIA", gpu_model="GTX 780 Ti", vram=3, clock_speed=875),
    Gpu.objects.create(brand="NVIDIA", gpu_model="GTX 750 Ti", vram=2, clock_speed=1020),
    Gpu.objects.create(brand="NVIDIA", gpu_model="GTX 680", vram=2, clock_speed=1006),

    Gpu.objects.create(brand="AMD", gpu_model="Radeon RX 7900 XTX", vram=24, clock_speed=2300),
    Gpu.objects.create(brand="AMD", gpu_model="Radeon RX 7900 XT", vram=20, clock_speed=2000),
    Gpu.objects.create(brand="AMD", gpu_model="Radeon RX 7800 XT", vram=16, clock_speed=2124),
    Gpu.objects.create(brand="AMD", gpu_model="Radeon RX 7700 XT", vram=12, clock_speed=2171),
    Gpu.objects.create(brand="AMD", gpu_model="Radeon RX 6700 XT", vram=12, clock_speed=2321),
    Gpu.objects.create(brand="AMD", gpu_model="Radeon RX 6600 XT", vram=8, clock_speed=1968),
    Gpu.objects.create(brand="AMD", gpu_model="Radeon RX 5700 XT", vram=8, clock_speed=1605),
    Gpu.objects.create(brand="AMD", gpu_model="Radeon RX 580", vram=8, clock_speed=1257),
    Gpu.objects.create(brand="AMD", gpu_model="Radeon R9 390X", vram=8, clock_speed=1050),
    Gpu.objects.create(brand="AMD", gpu_model="Radeon HD 7970", vram=3, clock_speed=925),
]

psu_db = [
    Psu.objects.create(psu_name="Corsair RM850x", wattage=850, efficiency="gold"),
    Psu.objects.create(psu_name="EVGA SuperNOVA 850 G5", wattage=850, efficiency="gold"),
    Psu.objects.create(psu_name="Seasonic Focus GX-850", wattage=850, efficiency="gold"),
    Psu.objects.create(psu_name="Cooler Master MWE Gold 850", wattage=850, efficiency="gold"),

    Psu.objects.create(psu_name="Seasonic PRIME TX-1000", wattage=1000, efficiency="titan"),
    Psu.objects.create(psu_name="EVGA SuperNOVA 1000 T2", wattage=1000, efficiency="titan"),
    Psu.objects.create(psu_name="Corsair AX1600i", wattage=1600, efficiency="plat"),
    Psu.objects.create(psu_name="EVGA SuperNOVA 1600 T2", wattage=1600, efficiency="plat"),
    Psu.objects.create(psu_name="Seasonic PRIME TX-1600", wattage=1600, efficiency="plat"),
    Psu.objects.create(psu_name="ASUS ROG Thor 1200W", wattage=1200, efficiency="plat"),
    Psu.objects.create(psu_name="Cooler Master V Gold 1200W", wattage=1200, efficiency="gold"),

    Psu.objects.create(psu_name="Corsair CV450", wattage=450, efficiency="bronze"),
    Psu.objects.create(psu_name="EVGA 500 W1", wattage=500, efficiency="bronze"),
    Psu.objects.create(psu_name="Seasonic S12III 550W", wattage=550, efficiency="bronze"),
    Psu.objects.create(psu_name="Cooler Master MWE Bronze 550W", wattage=550, efficiency="bronze"),

    Psu.objects.create(psu_name="Corsair TX750", wattage=750, efficiency="bronze"),
    Psu.objects.create(psu_name="Antec Earthwatts 650W", wattage=650, efficiency="bronze"),
    Psu.objects.create(psu_name="OCZ ModXStream Pro 700W", wattage=700, efficiency="silver"),
    Psu.objects.create(psu_name="Cooler Master GX 750W", wattage=750, efficiency="gold"),

    Psu.objects.create(psu_name="Seasonic PRIME Platinum 1000W", wattage=1000, efficiency="plat"),
    Psu.objects.create(psu_name="Corsair HX1200i", wattage=1200, efficiency="plat"),
]

ram_db = [
    Ram.objects.create(ram_name="G.Skill Trident Z RGB", capacity=16, ram_type="ddr4", ram_speed=3200),
    Ram.objects.create(ram_name="Corsair Vengeance LPX", capacity=16, ram_type="ddr4", ram_speed=3000),
    Ram.objects.create(ram_name="Kingston Fury Beast", capacity=16, ram_type="ddr4", ram_speed=3600),
    Ram.objects.create(ram_name="Crucial Ballistix Tactical", capacity=32, ram_type="ddr4", ram_speed=2666),
    Ram.objects.create(ram_name="Corsair Dominator Platinum", capacity=32, ram_type="ddr4", ram_speed=4000),
    Ram.objects.create(ram_name="G.Skill Aegis", capacity=8, ram_type="ddr4", ram_speed=2400),
    Ram.objects.create(ram_name="HyperX Predator", capacity=16, ram_type="ddr4", ram_speed=3000),
    Ram.objects.create(ram_name="ADATA XPG D50", capacity=16, ram_type="ddr4", ram_speed=3200),

    Ram.objects.create(ram_name="G.Skill Ripjaws S5", capacity=32, ram_type="ddr5", ram_speed=6000),
    Ram.objects.create(ram_name="Corsair Vengeance DDR5", capacity=64, ram_type="ddr5", ram_speed=5200),
    Ram.objects.create(ram_name="Kingston FURY Renegade", capacity=64, ram_type="ddr5", ram_speed=6400),
    Ram.objects.create(ram_name="Patriot Viper Steel", capacity=32, ram_type="ddr5", ram_speed=5200),
    Ram.objects.create(ram_name="Corsair Vengeance DDR5", capacity=32, ram_type="ddr5", ram_speed=5600),

    Ram.objects.create(ram_name="G.Skill Ripjaws X", capacity=8, ram_type="ddr3", ram_speed=1600),
    Ram.objects.create(ram_name="Corsair Vengeance Pro", capacity=8, ram_type="ddr3", ram_speed=2133),
    Ram.objects.create(ram_name="Kingston HyperX Fury", capacity=16, ram_type="ddr3", ram_speed=1866),
    Ram.objects.create(ram_name="Crucial Ballistix Sport", capacity=8, ram_type="ddr3", ram_speed=1333),
    Ram.objects.create(ram_name="ADATA XPG V2", capacity=16, ram_type="ddr3", ram_speed=2400),

    Ram.objects.create(ram_name="Corsair XMS2", capacity=4, ram_type="ddr2", ram_speed=800),
    Ram.objects.create(ram_name="Kingston ValueRAM", capacity=2, ram_type="ddr2", ram_speed=667),
    Ram.objects.create(ram_name="Patriot Signature", capacity=4, ram_type="ddr2", ram_speed=800),
    Ram.objects.create(ram_name="Crucial 2GB Ballistix", capacity=2, ram_type="ddr2", ram_speed=533),
]

storage_db = [
    Storage.objects.create(storage_name="Seagate Barracuda", storage_type="HDD",
                           capacity=1000, write_speed=150, read_speed=150),
    Storage.objects.create(storage_name="Western Digital Blue", storage_type="HDD",
                           capacity=2000, write_speed=160, read_speed=160),
    Storage.objects.create(storage_name="Toshiba X300", storage_type="HDD",
                           capacity=4000, write_speed=160, read_speed=160),
    Storage.objects.create(storage_name="Seagate IronWolf", storage_type="HDD",
                           capacity=8000, write_speed=200, read_speed=200),

    Storage.objects.create(storage_name="Samsung 860 EVO", storage_type="SSD",
                           capacity=500, write_speed=550, read_speed=550),
    Storage.objects.create(storage_name="Crucial MX500", storage_type="SSD",
                           capacity=1000, write_speed=530, read_speed=560),
    Storage.objects.create(storage_name="Western Digital Blue", storage_type="SSD",
                           capacity=250, write_speed=545, read_speed=545),
    Storage.objects.create(storage_name="SanDisk Ultra 3D", storage_type="SSD",
                           capacity=500, write_speed=560, read_speed=560),

    Storage.objects.create(storage_name="Seagate FireCuda", storage_type="SSHD",
                           capacity=1000, write_speed=200, read_speed=600),
    Storage.objects.create(storage_name="Western Digital Black", storage_type="SSHD",
                           capacity=2000, write_speed=210, read_speed=590),

    Storage.objects.create(storage_name="Samsung 970 EVO Plus", storage_type="NVMe",
                           capacity=500, write_speed=3300, read_speed=3500),
    Storage.objects.create(storage_name="Crucial P5 Plus", storage_type="NVMe",
                           capacity=1000, write_speed=6600, read_speed=6600),
    Storage.objects.create(storage_name="Western Digital SN850", storage_type="NVMe",
                           capacity=1000, write_speed=7000, read_speed=7000),
    Storage.objects.create(storage_name="Kingston KC2500", storage_type="NVMe",
                           capacity=500, write_speed=3500, read_speed=3500),

    Storage.objects.create(storage_name="Samsung 970 PRO", storage_type="M2",
                           capacity=512, write_speed=3500, read_speed=3500),
    Storage.objects.create(storage_name="Corsair MP600", storage_type="M2",
                           capacity=1000, write_speed=4950, read_speed=4950),
    Storage.objects.create(storage_name="ADATA XPG SX8200 Pro", storage_type="M2",
                           capacity=512, write_speed=3200, read_speed=3500),
    Storage.objects.create(storage_name="Intel Optane 905P", storage_type="M2",
                           capacity=480, write_speed=2500, read_speed=2500),

    Storage.objects.create(storage_name="Seagate FireCuda 520", storage_type="NVMe",
                           capacity=1000, write_speed=5000, read_speed=5000),
    Storage.objects.create(storage_name="Kingston A2000", storage_type="NVMe",
                           capacity=500, write_speed=2000, read_speed=2200),
]

casepc_db = [
    CasePC.objects.create(case_name="Corsair Obsidian 1000D", case_size="full"),
    CasePC.objects.create(case_name="Thermaltake View 71", case_size="full"),
    CasePC.objects.create(case_name="Fractal Design Define R7", case_size="full"),
    CasePC.objects.create(case_name="Cooler Master Cosmos C700P", case_size="full"),
    CasePC.objects.create(case_name="NZXT H710i", case_size="full"),

    CasePC.objects.create(case_name="Phanteks Eclipse P400A", case_size="mid"),
    CasePC.objects.create(case_name="Corsair 4000D Airflow", case_size="mid"),
    CasePC.objects.create(case_name="NZXT H510", case_size="mid"),
    CasePC.objects.create(case_name="Fractal Design Meshify C", case_size="mid"),
    CasePC.objects.create(case_name="Cooler Master MasterBox Q300L", case_size="mid"),

    CasePC.objects.create(case_name="Cooler Master Elite 110", case_size="mini"),
    CasePC.objects.create(case_name="Thermaltake Core V1", case_size="mini"),
    CasePC.objects.create(case_name="Fractal Design Node 202", case_size="mini"),
    CasePC.objects.create(case_name="Corsair Carbide 100R", case_size="mini"),
    CasePC.objects.create(case_name="SilverStone Sugo SG13", case_size="mini"),

    CasePC.objects.create(case_name="Fractal Design Define Mini C", case_size="micro-ATX"),
    CasePC.objects.create(case_name="Cooler Master MasterBox Q300P", case_size="micro-ATX"),
    CasePC.objects.create(case_name="Corsair Crystal 280X", case_size="micro-ATX"),
    CasePC.objects.create(case_name="Phanteks Evolv Shift", case_size="micro-ATX"),

    CasePC.objects.create(case_name="NZXT H210", case_size="mini-ITX"),
    CasePC.objects.create(case_name="Cooler Master NR200", case_size="mini-ITX"),
    CasePC.objects.create(case_name="Lian Li PC-Q21", case_size="mini-ITX"),
]

motherboard_db = [
    Motherboard.objects.create(motherboard_name="ASUS ROG Strix Z790-E", chipset="Intel Z790",
                               socket_type="LGA 1700", board_size="ATX", max_ram=128, ram_type="DDR5"),
    Motherboard.objects.create(motherboard_name="MSI MPG B550 Gaming Edge WiFi", chipset="AMD B550",
                               socket_type="AM4", board_size="ATX", max_ram=64, ram_type="DDR4"),
    Motherboard.objects.create(motherboard_name="Gigabyte AORUS Z690 Elite", chipset="Intel Z690",
                               socket_type="LGA 1700", board_size="ATX", max_ram=128, ram_type="DDR5"),
    Motherboard.objects.create(motherboard_name="ASRock Z590 Taichi", chipset="Intel Z590",
                               socket_type="LGA 1200", board_size="ATX", max_ram=128, ram_type="DDR4"),
    Motherboard.objects.create(motherboard_name="MSI MAG B460 TOMAHAWK", chipset="Intel B460",
                               socket_type="LGA 1200", board_size="ATX", max_ram=64, ram_type="DDR4"),

    Motherboard.objects.create(motherboard_name="ASRock B550M Pro4", chipset="AMD B550",
                               socket_type="AM4", board_size="micro ATX", max_ram=64, ram_type="DDR4"),
    Motherboard.objects.create(motherboard_name="Gigabyte B460M DS3H", chipset="Intel B460",
                               socket_type="LGA 1200", board_size="micro ATX", max_ram=64, ram_type="DDR4"),
    Motherboard.objects.create(motherboard_name="MSI B450M Pro-M2 Max", chipset="AMD B450",
                               socket_type="AM4", board_size="micro ATX", max_ram=64, ram_type="DDR4"),
    Motherboard.objects.create(motherboard_name="ASUS TUF B450M-Pro Gaming", chipset="AMD B450",
                               socket_type="AM4", board_size="micro ATX", max_ram=64, ram_type="DDR4"),
    Motherboard.objects.create(motherboard_name="Gigabyte Z490M AORUS PRO", chipset="Intel Z490",
                               socket_type="LGA 1200", board_size="micro ATX", max_ram=64, ram_type="DDR4"),

    Motherboard.objects.create(motherboard_name="ASUS ROG Strix Z390-I", chipset="Intel Z390",
                               socket_type="LGA 1151", board_size="mini ITX", max_ram=64, ram_type="DDR4"),
    Motherboard.objects.create(motherboard_name="Gigabyte Z590I AORUS Ultra", chipset="Intel Z590",
                               socket_type="LGA 1200", board_size="mini ITX", max_ram=64, ram_type="DDR4"),
    Motherboard.objects.create(motherboard_name="ASRock B450 Gaming-ITX/AC", chipset="AMD B450",
                               socket_type="AM4", board_size="mini ITX", max_ram=32, ram_type="DDR4"),
    Motherboard.objects.create(motherboard_name="MSI MPG B550I Gaming Edge WiFi", chipset="AMD B550",
                               socket_type="AM4", board_size="mini ITX", max_ram=64, ram_type="DDR4"),
    Motherboard.objects.create(motherboard_name="NZXT N7 Z490", chipset="Intel Z490",
                               socket_type="LGA 1200", board_size="mini ITX", max_ram=64, ram_type="DDR4"),

    Motherboard.objects.create(motherboard_name="Gigabyte Z590 AORUS XTREME WATERFORCE", chipset="Intel Z590",
                               socket_type="LGA 1200", board_size="E-ATX", max_ram=128, ram_type="DDR4"),
    Motherboard.objects.create(motherboard_name="ASUS ROG Zenith II Extreme Alpha", chipset="AMD TRX40",
                               socket_type="sTRX4", board_size="E-ATX", max_ram=256, ram_type="DDR4"),
    Motherboard.objects.create(motherboard_name="MSI MEG X570 GODLIKE", chipset="AMD X570",
                               socket_type="AM4", board_size="E-ATX", max_ram=128, ram_type="DDR4"),
    Motherboard.objects.create(motherboard_name="ASRock TRX40 Taichi", chipset="AMD TRX40",
                               socket_type="sTRX4", board_size="E-ATX", max_ram=256, ram_type="DDR4"),

    Motherboard.objects.create(motherboard_name="ASUS ROG Rampage VI Extreme Encore", chipset="Intel X299",
                               socket_type="LGA 2066", board_size="XL-ATX", max_ram=128, ram_type="DDR4"),
    Motherboard.objects.create(motherboard_name="MSI X299 Creator", chipset="Intel X299",
                               socket_type="LGA 2066", board_size="XL-ATX", max_ram=128, ram_type="DDR4"),
]

cpucooler_db = [
    CpuCooler.objects.create(cooler_name="Cooler Master Hyper 212 EVO",
                             cooler_type="air", max_power=200, fan_size=120),
    CpuCooler.objects.create(cooler_name="Noctua NH-D15",
                             cooler_type="air", max_power=220, fan_size=140),
    CpuCooler.objects.create(cooler_name="be quiet! Dark Rock Pro 4",
                             cooler_type="air", max_power=250, fan_size=135),
    CpuCooler.objects.create(cooler_name="Corsair Air Series A500",
                             cooler_type="air", max_power=200, fan_size=120),
    CpuCooler.objects.create(cooler_name="Cooler Master MasterAir MA410M",
                             cooler_type="air", max_power=150, fan_size=120),
    CpuCooler.objects.create(cooler_name="Cryorig R1 Ultimate",
                             cooler_type="air", max_power=240, fan_size=140),
    CpuCooler.objects.create(cooler_name="Noctua NH-C14S",
                             cooler_type="air", max_power=200, fan_size=140),
    CpuCooler.objects.create(cooler_name="Scythe Mugen 5 Rev.B",
                             cooler_type="air", max_power=180, fan_size=120),
    CpuCooler.objects.create(cooler_name="DeepCool Assassin III",
                             cooler_type="air", max_power=220, fan_size=140),
    CpuCooler.objects.create(cooler_name="Arctic Freezer 34 eSports",
                             cooler_type="air", max_power=150, fan_size=120),
    CpuCooler.objects.create(cooler_name="Cooler Master Hyper 212 Black Edition",
                             cooler_type="air", max_power=200, fan_size=120),
    CpuCooler.objects.create(cooler_name="Noctua NH-U12S",
                             cooler_type="air", max_power=180, fan_size=120),

    CpuCooler.objects.create(cooler_name="Corsair iCUE H150i Elite Capellix",
                             cooler_type="liquid", max_power=400, fan_size=120),
    CpuCooler.objects.create(cooler_name="NZXT Kraken Z73",
                             cooler_type="liquid", max_power=350, fan_size=120),
    CpuCooler.objects.create(cooler_name="Cooler Master MasterLiquid ML360R",
                             cooler_type="liquid", max_power=400, fan_size=120),
    CpuCooler.objects.create(cooler_name="EVGA CLC 280mm",
                             cooler_type="liquid", max_power=350, fan_size=140),
    CpuCooler.objects.create(cooler_name="Thermaltake Floe Riing 360",
                             cooler_type="liquid", max_power=420, fan_size=120),
    CpuCooler.objects.create(cooler_name="Corsair iCUE H115i ELITE",
                             cooler_type="liquid", max_power=350, fan_size=140),
    CpuCooler.objects.create(cooler_name="NZXT Kraken X63",
                             cooler_type="liquid", max_power=340, fan_size=140),
    CpuCooler.objects.create(cooler_name="Cooler Master MasterLiquid ML240L",
                             cooler_type="liquid", max_power=250, fan_size=120),
    CpuCooler.objects.create(cooler_name="Thermaltake Water 3.0 ARGB",
                             cooler_type="liquid", max_power=330, fan_size=120),
    CpuCooler.objects.create(cooler_name="Corsair Hydro Series H100i PRO",
                             cooler_type="liquid", max_power=350, fan_size=120),
]

sellers_db = [
    Seller.objects.create(f_name='Harry', l_name='Potter', email="potter@gmail.com", phone_num=37068877214),
    Seller.objects.create(f_name='Geralt', l_name='Rivianator', email="rivia@gmail.com", phone_num=37065795465),
    Seller.objects.create(f_name='Luke', l_name='Skywalker', email="walker@gmail.com", phone_num=37064612875),
    Seller.objects.create(f_name='Jon', l_name='Snow', email="snow@gmail.com", phone_num=37063471412),
    Seller.objects.create(f_name='Jack', l_name='Sparrow', email="sparrow@gmail.com", phone_num=37069896635),
    Seller.objects.create(f_name='Cat', l_name='Kitten', email="kitten@gmail.com", phone_num=37065425845),
    Seller.objects.create(f_name='Dexter', l_name='Morgan', email="morgan@gmail.com", phone_num=37064587235),
    Seller.objects.create(f_name='Lionel', l_name='Messi', email="messi@gmail.com", phone_num=37068546255),
    Seller.objects.create(f_name='Micheal', l_name='Jordan', email="jordan@gmail.com", phone_num=37069869217),
    Seller.objects.create(f_name='Connor', l_name='Mcgregor', email="connor@gmail.com", phone_num=37062389568),
    Seller.objects.create(f_name='Jon', l_name='Jones', email="jones@gmail.com", phone_num=37065569714),
    Seller.objects.create(f_name='Chuck', l_name='Norris', email="chuck@gmail.com", phone_num=37064256356),
]

cpu_listings_db = [
    CpuListing.objects.create(quantity=5, price=250, cpu=cpu_db[0], seller=sellers_db[0]),
    CpuListing.objects.create(quantity=6, price=250, cpu=cpu_db[4], seller=sellers_db[4]),
    CpuListing.objects.create(quantity=10, price=220, cpu=cpu_db[7], seller=sellers_db[7]),
    CpuListing.objects.create(quantity=3, price=350, cpu=cpu_db[12], seller=sellers_db[2]),
    CpuListing.objects.create(quantity=4, price=150, cpu=cpu_db[5], seller=sellers_db[5]),
    CpuListing.objects.create(quantity=2, price=700, cpu=cpu_db[9], seller=sellers_db[9]),
    CpuListing.objects.create(quantity=8, price=130, cpu=cpu_db[6], seller=sellers_db[6]),
    CpuListing.objects.create(quantity=5, price=350, cpu=cpu_db[1], seller=sellers_db[1]),
    CpuListing.objects.create(quantity=6, price=350, cpu=cpu_db[15], seller=sellers_db[0]),
    CpuListing.objects.create(quantity=3, price=700, cpu=cpu_db[10], seller=sellers_db[10]),
    CpuListing.objects.create(quantity=4, price=400, cpu=cpu_db[15], seller=sellers_db[11]),
    CpuListing.objects.create(quantity=3, price=120, cpu=cpu_db[17], seller=sellers_db[3]),
    CpuListing.objects.create(quantity=10, price=270, cpu=cpu_db[13], seller=sellers_db[8]),
    CpuListing.objects.create(quantity=2, price=550, cpu=cpu_db[22], seller=sellers_db[9]),
]

gpu_listings_db = [
    GpuListing.objects.create(quantity=5, price=2500, gpu=gpu_db[0], seller=sellers_db[3]),
    GpuListing.objects.create(quantity=3, price=1400, gpu=gpu_db[1], seller=sellers_db[10]),
    GpuListing.objects.create(quantity=7, price=2000, gpu=gpu_db[2], seller=sellers_db[1]),
    GpuListing.objects.create(quantity=4, price=1600, gpu=gpu_db[3], seller=sellers_db[6]),
    GpuListing.objects.create(quantity=6, price=1200, gpu=gpu_db[4], seller=sellers_db[0]),
    GpuListing.objects.create(quantity=8, price=800, gpu=gpu_db[5], seller=sellers_db[2]),
    GpuListing.objects.create(quantity=5, price=950, gpu=gpu_db[6], seller=sellers_db[5]),
    GpuListing.objects.create(quantity=3, price=850, gpu=gpu_db[7], seller=sellers_db[8]),
    GpuListing.objects.create(quantity=6, price=350, gpu=gpu_db[8], seller=sellers_db[4]),
    GpuListing.objects.create(quantity=4, price=60, gpu=gpu_db[9], seller=sellers_db[9]),
    GpuListing.objects.create(quantity=7, price=1100, gpu=gpu_db[10], seller=sellers_db[7]),
    GpuListing.objects.create(quantity=5, price=480, gpu=gpu_db[11], seller=sellers_db[4]),
    GpuListing.objects.create(quantity=2, price=600, gpu=gpu_db[12], seller=sellers_db[11]),
    GpuListing.objects.create(quantity=3, price=530, gpu=gpu_db[13], seller=sellers_db[6]),
    GpuListing.objects.create(quantity=10, price=250, gpu=gpu_db[14], seller=sellers_db[11]),
    GpuListing.objects.create(quantity=4, price=750, gpu=gpu_db[19], seller=sellers_db[4]),
    GpuListing.objects.create(quantity=7, price=320, gpu=gpu_db[24], seller=sellers_db[8]),
    GpuListing.objects.create(quantity=3, price=430, gpu=gpu_db[22], seller=sellers_db[1]),
    GpuListing.objects.create(quantity=1, price=650, gpu=gpu_db[20], seller=sellers_db[9]),
    GpuListing.objects.create(quantity=5, price=980, gpu=gpu_db[18], seller=sellers_db[10]),
]

psu_listings = [
    PsuListing.objects.create(psu=psu_db[0], seller=sellers_db[3], quantity=2, price=150),
    PsuListing.objects.create(psu=psu_db[2], seller=sellers_db[1], quantity=1, price=140),
    PsuListing.objects.create(psu=psu_db[5], seller=sellers_db[6], quantity=3, price=250),
    PsuListing.objects.create(psu=psu_db[7], seller=sellers_db[0], quantity=1, price=300),
    PsuListing.objects.create(psu=psu_db[4], seller=sellers_db[4], quantity=2, price=220),
    PsuListing.objects.create(psu=psu_db[8], seller=sellers_db[2], quantity=1, price=320),
    PsuListing.objects.create(psu=psu_db[10], seller=sellers_db[5], quantity=2, price=180),
    PsuListing.objects.create(psu=psu_db[12], seller=sellers_db[9], quantity=4, price=80),
    PsuListing.objects.create(psu=psu_db[14], seller=sellers_db[7], quantity=1, price=90),
    PsuListing.objects.create(psu=psu_db[11], seller=sellers_db[8], quantity=2, price=190),
    PsuListing.objects.create(psu=psu_db[6], seller=sellers_db[10], quantity=1, price=350),
    PsuListing.objects.create(psu=psu_db[15], seller=sellers_db[11], quantity=3, price=100),
    PsuListing.objects.create(psu=psu_db[9], seller=sellers_db[5], quantity=1, price=280),
    PsuListing.objects.create(psu=psu_db[13], seller=sellers_db[3], quantity=2, price=110),
    PsuListing.objects.create(psu=psu_db[1], seller=sellers_db[7], quantity=1, price=160),
    PsuListing.objects.create(psu=psu_db[3], seller=sellers_db[2], quantity=2, price=130),
]

ram_listings_db = [
    RamListing.objects.create(quantity=5, price=90, ram=ram_db[12], seller=sellers_db[3]),
    RamListing.objects.create(quantity=8, price=80, ram=ram_db[7], seller=sellers_db[1]),
    RamListing.objects.create(quantity=6, price=96, ram=ram_db[2], seller=sellers_db[7]),
    RamListing.objects.create(quantity=3, price=150, ram=ram_db[15], seller=sellers_db[2]),
    RamListing.objects.create(quantity=2, price=60, ram=ram_db[10], seller=sellers_db[5]),
    RamListing.objects.create(quantity=7, price=85, ram=ram_db[5], seller=sellers_db[4]),
    RamListing.objects.create(quantity=4, price=93, ram=ram_db[17], seller=sellers_db[8]),
    RamListing.objects.create(quantity=5, price=200, ram=ram_db[9], seller=sellers_db[9]),
    RamListing.objects.create(quantity=10, price=350, ram=ram_db[0], seller=sellers_db[6]),
    RamListing.objects.create(quantity=3, price=280, ram=ram_db[8], seller=sellers_db[10]),
    RamListing.objects.create(quantity=8, price=240, ram=ram_db[13], seller=sellers_db[11]),
    RamListing.objects.create(quantity=5, price=190, ram=ram_db[4], seller=sellers_db[0]),
    RamListing.objects.create(quantity=4, price=50, ram=ram_db[11], seller=sellers_db[2]),
    RamListing.objects.create(quantity=2, price=65, ram=ram_db[6], seller=sellers_db[3]),
    RamListing.objects.create(quantity=6, price=59, ram=ram_db[18], seller=sellers_db[1]),
    RamListing.objects.create(quantity=3, price=40, ram=ram_db[16], seller=sellers_db[7]),
    RamListing.objects.create(quantity=8, price=70, ram=ram_db[3], seller=sellers_db[5]),
    RamListing.objects.create(quantity=2, price=30, ram=ram_db[14], seller=sellers_db[9]),
    RamListing.objects.create(quantity=4, price=20, ram=ram_db[19], seller=sellers_db[10]),
]

storage_listing_db = [
    StorageListing.objects.create(quantity=5, price=60, storage=storage_db[3], seller=sellers_db[1]),
    StorageListing.objects.create(quantity=8, price=90, storage=storage_db[7], seller=sellers_db[2]),
    StorageListing.objects.create(quantity=3, price=120, storage=storage_db[1], seller=sellers_db[3]),
    StorageListing.objects.create(quantity=4, price=200, storage=storage_db[10], seller=sellers_db[4]),
    StorageListing.objects.create(quantity=10, price=75, storage=storage_db[5], seller=sellers_db[5]),
    StorageListing.objects.create(quantity=7, price=110, storage=storage_db[12], seller=sellers_db[6]),
    StorageListing.objects.create(quantity=6, price=55, storage=storage_db[0], seller=sellers_db[7]),
    StorageListing.objects.create(quantity=9, price=85, storage=storage_db[14], seller=sellers_db[8]),
    StorageListing.objects.create(quantity=5, price=100, storage=storage_db[8], seller=sellers_db[9]),
    StorageListing.objects.create(quantity=4, price=130, storage=storage_db[2], seller=sellers_db[10]),
    StorageListing.objects.create(quantity=6, price=120, storage=storage_db[11], seller=sellers_db[11]),
    StorageListing.objects.create(quantity=3, price=200, storage=storage_db[6], seller=sellers_db[0]),
    StorageListing.objects.create(quantity=5, price=210, storage=storage_db[15], seller=sellers_db[1]),
    StorageListing.objects.create(quantity=4, price=140, storage=storage_db[4], seller=sellers_db[2]),
    StorageListing.objects.create(quantity=2, price=180, storage=storage_db[9], seller=sellers_db[3]),
    StorageListing.objects.create(quantity=3, price=160, storage=storage_db[13], seller=sellers_db[4]),
]

casepc_listings_db = [
    CasePCListing.objects.create(quantity=5, price=180, casepc=casepc_db[2], seller=sellers_db[4]),
    CasePCListing.objects.create(quantity=3, price=250, casepc=casepc_db[0], seller=sellers_db[1]),
    CasePCListing.objects.create(quantity=7, price=90, casepc=casepc_db[10], seller=sellers_db[3]),
    CasePCListing.objects.create(quantity=2, price=210, casepc=casepc_db[3], seller=sellers_db[6]),
    CasePCListing.objects.create(quantity=6, price=150, casepc=casepc_db[7], seller=sellers_db[2]),
    CasePCListing.objects.create(quantity=4, price=300, casepc=casepc_db[1], seller=sellers_db[8]),
    CasePCListing.objects.create(quantity=8, price=85, casepc=casepc_db[11], seller=sellers_db[5]),
    CasePCListing.objects.create(quantity=3, price=110, casepc=casepc_db[9], seller=sellers_db[10]),
    CasePCListing.objects.create(quantity=5, price=260, casepc=casepc_db[4], seller=sellers_db[0]),
    CasePCListing.objects.create(quantity=6, price=95, casepc=casepc_db[12], seller=sellers_db[7]),
    CasePCListing.objects.create(quantity=2, price=200, casepc=casepc_db[5], seller=sellers_db[11]),
    CasePCListing.objects.create(quantity=4, price=120, casepc=casepc_db[13], seller=sellers_db[9]),
    CasePCListing.objects.create(quantity=7, price=130, casepc=casepc_db[8], seller=sellers_db[3]),
    CasePCListing.objects.create(quantity=5, price=280, casepc=casepc_db[6], seller=sellers_db[1]),
    CasePCListing.objects.create(quantity=3, price=105, casepc=casepc_db[15], seller=sellers_db[4]),
    CasePCListing.objects.create(quantity=2, price=140, casepc=casepc_db[17], seller=sellers_db[2]),
    CasePCListing.objects.create(quantity=6, price=190, casepc=casepc_db[16], seller=sellers_db[8]),
]

motherboard_listings_db = [
    MotherboardListing.objects.create(quantity=5, price=320,
                                      motherboard=motherboard_db[3], seller=sellers_db[7]),
    MotherboardListing.objects.create(quantity=8, price=450,
                                      motherboard=motherboard_db[10], seller=sellers_db[2]),
    MotherboardListing.objects.create(quantity=3, price=280,
                                      motherboard=motherboard_db[6], seller=sellers_db[5]),
    MotherboardListing.objects.create(quantity=7, price=500,
                                      motherboard=motherboard_db[15], seller=sellers_db[1]),
    MotherboardListing.objects.create(quantity=4, price=600,
                                      motherboard=motherboard_db[17], seller=sellers_db[8]),
    MotherboardListing.objects.create(quantity=6, price=200,
                                      motherboard=motherboard_db[5], seller=sellers_db[3]),
    MotherboardListing.objects.create(quantity=9, price=750,
                                      motherboard=motherboard_db[16], seller=sellers_db[10]),
    MotherboardListing.objects.create(quantity=2, price=480,
                                      motherboard=motherboard_db[12], seller=sellers_db[6]),
    MotherboardListing.objects.create(quantity=10, price=530,
                                      motherboard=motherboard_db[8], seller=sellers_db[0]),
    MotherboardListing.objects.create(quantity=3, price=410,
                                      motherboard=motherboard_db[4], seller=sellers_db[9]),
    MotherboardListing.objects.create(quantity=5, price=690,
                                      motherboard=motherboard_db[14], seller=sellers_db[11]),
    MotherboardListing.objects.create(quantity=7, price=350,
                                      motherboard=motherboard_db[1], seller=sellers_db[4]),
    MotherboardListing.objects.create(quantity=8, price=270,
                                      motherboard=motherboard_db[9], seller=sellers_db[2]),
    MotherboardListing.objects.create(quantity=6, price=620,
                                      motherboard=motherboard_db[18], seller=sellers_db[10]),
    MotherboardListing.objects.create(quantity=4, price=290,
                                      motherboard=motherboard_db[7], seller=sellers_db[5]),
    MotherboardListing.objects.create(quantity=9, price=510,
                                      motherboard=motherboard_db[13], seller=sellers_db[1]),
    MotherboardListing.objects.create(quantity=2, price=540,
                                      motherboard=motherboard_db[19], seller=sellers_db[3]),
    MotherboardListing.objects.create(quantity=10, price=400,
                                      motherboard=motherboard_db[11], seller=sellers_db[6]),
]

cpucooler_listing_db = [
    CpuCoolerListing.objects.create(quantity=10, price=45, cpucooler=cpucooler_db[5], seller=sellers_db[0]),
    CpuCoolerListing.objects.create(quantity=5, price=50, cpucooler=cpucooler_db[1], seller=sellers_db[1]),
    CpuCoolerListing.objects.create(quantity=8, price=80, cpucooler=cpucooler_db[0], seller=sellers_db[2]),
    CpuCoolerListing.objects.create(quantity=6, price=70, cpucooler=cpucooler_db[8], seller=sellers_db[3]),
    CpuCoolerListing.objects.create(quantity=12, price=112, cpucooler=cpucooler_db[14], seller=sellers_db[4]),
    CpuCoolerListing.objects.create(quantity=4, price=160, cpucooler=cpucooler_db[3], seller=sellers_db[5]),
    CpuCoolerListing.objects.create(quantity=9, price=90, cpucooler=cpucooler_db[13], seller=sellers_db[6]),
    CpuCoolerListing.objects.create(quantity=7, price=90, cpucooler=cpucooler_db[6], seller=sellers_db[7]),
    CpuCoolerListing.objects.create(quantity=10, price=250, cpucooler=cpucooler_db[11], seller=sellers_db[8]),
    CpuCoolerListing.objects.create(quantity=5, price=70, cpucooler=cpucooler_db[7], seller=sellers_db[9]),
    CpuCoolerListing.objects.create(quantity=8, price=50, cpucooler=cpucooler_db[2], seller=sellers_db[10]),
    CpuCoolerListing.objects.create(quantity=4, price=190, cpucooler=cpucooler_db[4], seller=sellers_db[0]),
    CpuCoolerListing.objects.create(quantity=3, price=130, cpucooler=cpucooler_db[12], seller=sellers_db[2]),
    CpuCoolerListing.objects.create(quantity=6, price=220, cpucooler=cpucooler_db[10], seller=sellers_db[3]),
    CpuCoolerListing.objects.create(quantity=15, price=200, cpucooler=cpucooler_db[9], seller=sellers_db[4]),
]

pcbuild_db = [
    PcBuild.objects.create(title="Build 1", cpu=cpu_db[6], cpucooler=cpucooler_db[12],
                           gpu=gpu_db[4], psu=psu_db[5], motherboard=motherboard_db[7], pc_case=casepc_db[1]),
    PcBuild.objects.create(title="Build 2", cpu=cpu_db[3], cpucooler=cpucooler_db[1],
                           gpu=gpu_db[9], psu=psu_db[12], motherboard=motherboard_db[12], pc_case=casepc_db[2]),
    PcBuild.objects.create(title="Build 3", cpu=cpu_db[8], cpucooler=cpucooler_db[0],
                           gpu=gpu_db[6], psu=psu_db[6], motherboard=motherboard_db[4], pc_case=casepc_db[5]),
    PcBuild.objects.create(title="Build 4", cpu=cpu_db[5], cpucooler=cpucooler_db[10],
                           gpu=gpu_db[7], psu=psu_db[0], motherboard=motherboard_db[11], pc_case=casepc_db[9]),
    PcBuild.objects.create(title="Build 5", cpu=cpu_db[1], cpucooler=cpucooler_db[7],
                           gpu=gpu_db[2], psu=psu_db[3], motherboard=motherboard_db[8], pc_case=casepc_db[8]),
    PcBuild.objects.create(title="Build 6", cpu=cpu_db[7], cpucooler=cpucooler_db[5],
                           gpu=gpu_db[1], psu=psu_db[4], motherboard=motherboard_db[2], pc_case=casepc_db[3]),
    PcBuild.objects.create(title="Build 7", cpu=cpu_db[0], cpucooler=cpucooler_db[4],
                           gpu=gpu_db[5], psu=psu_db[8], motherboard=motherboard_db[0], pc_case=casepc_db[0]),
    PcBuild.objects.create(title="Build 8", cpu=cpu_db[10], cpucooler=cpucooler_db[13],
                           gpu=gpu_db[3], psu=psu_db[2], motherboard=motherboard_db[14], pc_case=casepc_db[7]),
    PcBuild.objects.create(title="Build 9", cpu=cpu_db[12], cpucooler=cpucooler_db[8],
                           gpu=gpu_db[0], psu=psu_db[7], motherboard=motherboard_db[10], pc_case=casepc_db[6]),
    PcBuild.objects.create(title="Build 10", cpu=cpu_db[4], cpucooler=cpucooler_db[9],
                           gpu=gpu_db[8], psu=psu_db[6], motherboard=motherboard_db[5], pc_case=casepc_db[4]),
    PcBuild.objects.create(title="Build 11", cpu=cpu_db[6], cpucooler=cpucooler_db[2],
                           gpu=gpu_db[2], psu=psu_db[0], motherboard=motherboard_db[3], pc_case=casepc_db[3]),
    PcBuild.objects.create(title="Build 12", cpu=cpu_db[9], cpucooler=cpucooler_db[11],
                           gpu=gpu_db[7], psu=psu_db[4], motherboard=motherboard_db[9], pc_case=casepc_db[5]),
    PcBuild.objects.create(title="Build 13", cpu=cpu_db[13], cpucooler=cpucooler_db[6],
                           gpu=gpu_db[4], psu=psu_db[8], motherboard=motherboard_db[1], pc_case=casepc_db[2]),
    PcBuild.objects.create(title="Build 14", cpu=cpu_db[2], cpucooler=cpucooler_db[3],
                           gpu=gpu_db[9], psu=psu_db[1], motherboard=motherboard_db[6], pc_case=casepc_db[7]),
    PcBuild.objects.create(title="Build 15", cpu=cpu_db[11], cpucooler=cpucooler_db[0],
                           gpu=gpu_db[3], psu=psu_db[11], motherboard=motherboard_db[13], pc_case=casepc_db[9]),
    PcBuild.objects.create(title="Build 16", cpu=cpu_db[5], cpucooler=cpucooler_db[12],
                           gpu=gpu_db[6], psu=psu_db[5], motherboard=motherboard_db[2], pc_case=casepc_db[0]),
    PcBuild.objects.create(title="Build 17", cpu=cpu_db[14], cpucooler=cpucooler_db[14],
                           gpu=gpu_db[0], psu=psu_db[13], motherboard=motherboard_db[4], pc_case=casepc_db[8]),
    PcBuild.objects.create(title="Build 18", cpu=cpu_db[15], cpucooler=cpucooler_db[13],
                           gpu=gpu_db[5], psu=psu_db[9], motherboard=motherboard_db[3], pc_case=casepc_db[1]),
    PcBuild.objects.create(title="Build 19", cpu=cpu_db[16], cpucooler=cpucooler_db[15],
                           gpu=gpu_db[6], psu=psu_db[10], motherboard=motherboard_db[7], pc_case=casepc_db[6]),
    PcBuild.objects.create(title="Build 20", cpu=cpu_db[17], cpucooler=cpucooler_db[14],
                           gpu=gpu_db[1], psu=psu_db[7], motherboard=motherboard_db[0], pc_case=casepc_db[4]),
    PcBuild.objects.create(title="Build 21", cpu=cpu_db[8], cpucooler=cpucooler_db[5],
                           gpu=gpu_db[7], psu=psu_db[3], motherboard=motherboard_db[8], pc_case=casepc_db[3]),
    PcBuild.objects.create(title="Build 22", cpu=cpu_db[1], cpucooler=cpucooler_db[10],
                           gpu=gpu_db[0], psu=psu_db[6], motherboard=motherboard_db[2], pc_case=casepc_db[9]),
    PcBuild.objects.create(title="Build 23", cpu=cpu_db[9], cpucooler=cpucooler_db[1],
                           gpu=gpu_db[3], psu=psu_db[1], motherboard=motherboard_db[14], pc_case=casepc_db[7]),
    PcBuild.objects.create(title="Build 24", cpu=cpu_db[4], cpucooler=cpucooler_db[12],
                           gpu=gpu_db[2], psu=psu_db[2], motherboard=motherboard_db[15], pc_case=casepc_db[5]),
    PcBuild.objects.create(title="Build 25", cpu=cpu_db[12], cpucooler=cpucooler_db[4],
                           gpu=gpu_db[8], psu=psu_db[13], motherboard=motherboard_db[1], pc_case=casepc_db[8]),
    PcBuild.objects.create(title="Build 26", cpu=cpu_db[3], cpucooler=cpucooler_db[7],
                           gpu=gpu_db[5], psu=psu_db[9], motherboard=motherboard_db[10], pc_case=casepc_db[6]),
]

rambuild_db = [
    RamBuild.objects.create(quantity=2, ram=ram_db[0], pcbuild=pcbuild_db[0]),
    RamBuild.objects.create(quantity=2, ram=ram_db[1], pcbuild=pcbuild_db[1]),
    RamBuild.objects.create(quantity=2, ram=ram_db[2], pcbuild=pcbuild_db[2]),
    RamBuild.objects.create(quantity=4, ram=ram_db[3], pcbuild=pcbuild_db[3]),
    RamBuild.objects.create(quantity=4, ram=ram_db[4], pcbuild=pcbuild_db[4]),
    RamBuild.objects.create(quantity=2, ram=ram_db[5], pcbuild=pcbuild_db[5]),
    RamBuild.objects.create(quantity=2, ram=ram_db[6], pcbuild=pcbuild_db[6]),
    RamBuild.objects.create(quantity=2, ram=ram_db[7], pcbuild=pcbuild_db[7]),
    RamBuild.objects.create(quantity=4, ram=ram_db[8], pcbuild=pcbuild_db[8]),
    RamBuild.objects.create(quantity=8, ram=ram_db[9], pcbuild=pcbuild_db[9]),
    RamBuild.objects.create(quantity=8, ram=ram_db[10], pcbuild=pcbuild_db[10]),
    RamBuild.objects.create(quantity=4, ram=ram_db[11], pcbuild=pcbuild_db[11]),
    RamBuild.objects.create(quantity=4, ram=ram_db[12], pcbuild=pcbuild_db[12]),
    RamBuild.objects.create(quantity=2, ram=ram_db[13], pcbuild=pcbuild_db[13]),
    RamBuild.objects.create(quantity=2, ram=ram_db[14], pcbuild=pcbuild_db[14]),
    RamBuild.objects.create(quantity=2, ram=ram_db[15], pcbuild=pcbuild_db[15]),
    RamBuild.objects.create(quantity=2, ram=ram_db[16], pcbuild=pcbuild_db[16]),
    RamBuild.objects.create(quantity=2, ram=ram_db[17], pcbuild=pcbuild_db[17]),
    RamBuild.objects.create(quantity=2, ram=ram_db[18], pcbuild=pcbuild_db[18]),
    RamBuild.objects.create(quantity=4, ram=ram_db[9], pcbuild=pcbuild_db[19]),
    RamBuild.objects.create(quantity=2, ram=ram_db[10], pcbuild=pcbuild_db[20]),
    RamBuild.objects.create(quantity=2, ram=ram_db[11], pcbuild=pcbuild_db[21]),
    RamBuild.objects.create(quantity=4, ram=ram_db[3], pcbuild=pcbuild_db[22]),
    RamBuild.objects.create(quantity=2, ram=ram_db[12], pcbuild=pcbuild_db[23]),
    RamBuild.objects.create(quantity=2, ram=ram_db[13], pcbuild=pcbuild_db[24]),
    RamBuild.objects.create(quantity=2, ram=ram_db[2], pcbuild=pcbuild_db[25]),
]

storagebuild_db = [
    StorageBuild.objects.create(quantity=1, storage=storage_db[7], pcbuild=pcbuild_db[0]),
    StorageBuild.objects.create(quantity=1, storage=storage_db[2], pcbuild=pcbuild_db[1]),
    StorageBuild.objects.create(quantity=1, storage=storage_db[10], pcbuild=pcbuild_db[2]),
    StorageBuild.objects.create(quantity=1, storage=storage_db[1], pcbuild=pcbuild_db[3]),
    StorageBuild.objects.create(quantity=1, storage=storage_db[12], pcbuild=pcbuild_db[4]),
    StorageBuild.objects.create(quantity=1, storage=storage_db[5], pcbuild=pcbuild_db[5]),
    StorageBuild.objects.create(quantity=1, storage=storage_db[11], pcbuild=pcbuild_db[6]),
    StorageBuild.objects.create(quantity=1, storage=storage_db[9], pcbuild=pcbuild_db[7]),
    StorageBuild.objects.create(quantity=1, storage=storage_db[8], pcbuild=pcbuild_db[8]),
    StorageBuild.objects.create(quantity=1, storage=storage_db[13], pcbuild=pcbuild_db[9]),
    StorageBuild.objects.create(quantity=1, storage=storage_db[3], pcbuild=pcbuild_db[10]),
    StorageBuild.objects.create(quantity=1, storage=storage_db[15], pcbuild=pcbuild_db[11]),
    StorageBuild.objects.create(quantity=1, storage=storage_db[6], pcbuild=pcbuild_db[12]),
    StorageBuild.objects.create(quantity=1, storage=storage_db[10], pcbuild=pcbuild_db[13]),
    StorageBuild.objects.create(quantity=1, storage=storage_db[2], pcbuild=pcbuild_db[14]),
    StorageBuild.objects.create(quantity=1, storage=storage_db[5], pcbuild=pcbuild_db[15]),
    StorageBuild.objects.create(quantity=1, storage=storage_db[7], pcbuild=pcbuild_db[16]),
    StorageBuild.objects.create(quantity=1, storage=storage_db[12], pcbuild=pcbuild_db[17]),
    StorageBuild.objects.create(quantity=1, storage=storage_db[14], pcbuild=pcbuild_db[18]),
    StorageBuild.objects.create(quantity=1, storage=storage_db[3], pcbuild=pcbuild_db[19]),
    StorageBuild.objects.create(quantity=1, storage=storage_db[9], pcbuild=pcbuild_db[20]),
    StorageBuild.objects.create(quantity=1, storage=storage_db[0], pcbuild=pcbuild_db[21]),
    StorageBuild.objects.create(quantity=1, storage=storage_db[4], pcbuild=pcbuild_db[22]),
    StorageBuild.objects.create(quantity=1, storage=storage_db[16], pcbuild=pcbuild_db[23]),
    StorageBuild.objects.create(quantity=1, storage=storage_db[1], pcbuild=pcbuild_db[24]),
    StorageBuild.objects.create(quantity=1, storage=storage_db[6], pcbuild=pcbuild_db[25]),

    StorageBuild.objects.create(quantity=1, storage=storage_db[8], pcbuild=pcbuild_db[1]),
    StorageBuild.objects.create(quantity=1, storage=storage_db[16], pcbuild=pcbuild_db[2]),
    StorageBuild.objects.create(quantity=1, storage=storage_db[10], pcbuild=pcbuild_db[4]),
    StorageBuild.objects.create(quantity=2, storage=storage_db[3], pcbuild=pcbuild_db[5]),
    StorageBuild.objects.create(quantity=1, storage=storage_db[7], pcbuild=pcbuild_db[6]),
    StorageBuild.objects.create(quantity=1, storage=storage_db[1], pcbuild=pcbuild_db[9]),
    StorageBuild.objects.create(quantity=1, storage=storage_db[13], pcbuild=pcbuild_db[12]),
    StorageBuild.objects.create(quantity=1, storage=storage_db[4], pcbuild=pcbuild_db[15]),
]

pc_build_listing_db = [
    PcBuildListing.objects.create(price=3000, condition="full",
                                  description="A powerful gaming rig with RTX 4080.",
                                  pc_build=pcbuild_db[5], seller=sellers_db[2]),
    PcBuildListing.objects.create(price=1200, condition="pre-owned",
                                  description="Used but still in great shape.",
                                  pc_build=pcbuild_db[8], seller=sellers_db[4]),
    PcBuildListing.objects.create(price=2500, condition="full",
                                  description="High-end performance build with RTX 3080.",
                                  pc_build=pcbuild_db[13], seller=sellers_db[1]),
    PcBuildListing.objects.create(price=1800, condition="pre-owned",
                                  description="Used but still in great shape.",
                                  pc_build=pcbuild_db[3], seller=sellers_db[6]),
    PcBuildListing.objects.create(price=1600, condition="pre-owned",
                                  description="Affordable and fully functional.",
                                  pc_build=pcbuild_db[12], seller=sellers_db[0]),
    PcBuildListing.objects.create(price=2200, condition="full",
                                  description="Top-tier components for smooth performance.",
                                  pc_build=pcbuild_db[6], seller=sellers_db[3]),
    PcBuildListing.objects.create(price=1300, condition="pre-owned",
                                  description="Affordable and fully functional.",
                                  pc_build=pcbuild_db[16], seller=sellers_db[5]),
    PcBuildListing.objects.create(price=1700, condition="full",
                                  description="Mid-range build with strong specs.",
                                  pc_build=pcbuild_db[10], seller=sellers_db[7]),
    PcBuildListing.objects.create(price=1500, condition="full",
                                  description="Great for gaming and productivity.",
                                  pc_build=pcbuild_db[9], seller=sellers_db[9]),
    PcBuildListing.objects.create(price=1700, condition="full",
                                  description="Great for gaming and productivity.",
                                  pc_build=pcbuild_db[9], seller=sellers_db[9]),
    PcBuildListing.objects.create(price=1800, condition="pre-owned",
                                  description="Lightly used but well-maintained.",
                                  pc_build=pcbuild_db[14], seller=sellers_db[11]),
    PcBuildListing.objects.create(price=2000, condition="full",
                                  description="All-around great PC build with powerful specs.",
                                  pc_build=pcbuild_db[11], seller=sellers_db[1]),
    PcBuildListing.objects.create(price=1400, condition="pre-owned",
                                  description="Used but still reliable.",
                                  pc_build=pcbuild_db[19], seller=sellers_db[7]),
    PcBuildListing.objects.create(price=1600, condition="full",
                                  description="Solid performance for any task.",
                                  pc_build=pcbuild_db[1], seller=sellers_db[4]),
    PcBuildListing.objects.create(price=2500, condition="pre-owned",
                                  description="Used but perfect for high-end gaming.",
                                  pc_build=pcbuild_db[7], seller=sellers_db[3]),
    PcBuildListing.objects.create(price=1300, condition="full",
                                  description="Great budget build for casual use.",
                                  pc_build=pcbuild_db[2], seller=sellers_db[8]),
    PcBuildListing.objects.create(price=3000, condition="full",
                                  description="The ultimate gaming experience with RTX 4080.",
                                  pc_build=pcbuild_db[0], seller=sellers_db[0]),
    PcBuildListing.objects.create(price=1600, condition="pre-owned",
                                  description="Some assembly required, but still a great deal.",
                                  pc_build=pcbuild_db[15], seller=sellers_db[5]),
    PcBuildListing.objects.create(price=1400, condition="pre-owned",
                                  description="Used but still reliable.",
                                  pc_build=pcbuild_db[19], seller=sellers_db[7]),
    PcBuildListing.objects.create(price=1800, condition="full",
                                  description="Solid performance for gaming and work.",
                                  pc_build=pcbuild_db[17], seller=sellers_db[4]),
    PcBuildListing.objects.create(price=1600, condition="full",
                                  description="Good build for mid-range gaming.",
                                  pc_build=pcbuild_db[20], seller=sellers_db[6]),
    PcBuildListing.objects.create(price=1900, condition="full",
                                  description="A balanced build for both gaming and productivity.",
                                  pc_build=pcbuild_db[22], seller=sellers_db[9]),
    PcBuildListing.objects.create(price=1700, condition="pre-owned",
                                  description="Used but in excellent condition.",
                                  pc_build=pcbuild_db[21], seller=sellers_db[3]),
    PcBuildListing.objects.create(price=1500, condition="full",
                                  description="Strong performance for everyday tasks.",
                                  pc_build=pcbuild_db[23], seller=sellers_db[8]),
    PcBuildListing.objects.create(price=1400, condition="pre-owned",
                                  description="Budget-friendly and fully functional.",
                                  pc_build=pcbuild_db[24], seller=sellers_db[5]),
    PcBuildListing.objects.create(price=1800, condition="full",
                                  description="A balanced build for both gaming and productivity.",
                                  pc_build=pcbuild_db[25], seller=sellers_db[7]),
    PcBuildListing.objects.create(price=1600, condition="pre-owned",
                                  description="Used but still powerful.",
                                  pc_build=pcbuild_db[5], seller=sellers_db[2]),
]
